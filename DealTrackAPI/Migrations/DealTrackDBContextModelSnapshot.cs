// <auto-generated />
using System;
using DealTrackAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DealTrackAPI.Migrations
{
    [DbContext(typeof(DealTrackDBContext))]
    partial class DealTrackDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DealTrackAPI.Entities.Appraiser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OfficeNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Appraiser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressOne = "107 N. 200 W.",
                            BusinessName = "Utah South Appraisal",
                            City = "Cedar City",
                            EmailAddress = "kreed@utahsouthappraisal.com",
                            MobileNumber = "435-531-9683",
                            Name = "Karsten Reed",
                            OfficeNumber = "435-865-1921",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 2,
                            AddressOne = "337 S. Main St.",
                            AddressTwo = "Ste 122",
                            BusinessName = "Hymas & Associates",
                            City = "Cedar City",
                            EmailAddress = "cody@hymasappraisal.com",
                            OfficeNumber = "435-313-1444",
                            State = "UT",
                            ZipCode = "84720"
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DealId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Lorem Ipsum",
                            CreatedDate = new DateTime(2020, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            DealId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Lorem Ipsum",
                            CreatedDate = new DateTime(2020, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            DealId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Lorem Ipsum",
                            CreatedDate = new DateTime(2020, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            DealId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "Lorem Ipsum",
                            CreatedDate = new DateTime(2020, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            DealId = 4
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOne")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OfficeNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressOne = "2167 W 100 N",
                            City = "Cedar City",
                            EmailAddress = "cbearnson@gmail.com",
                            FirstName = "Chris",
                            LastName = "Bearnson",
                            MobileNumber = "435-590-9117",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 2,
                            AddressOne = "2167 W 100 N",
                            City = "Cedar City",
                            EmailAddress = "dbearnson@gmail.com",
                            FirstName = "Day",
                            LastName = "Bearnson",
                            MobileNumber = "435-590-9118",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 3,
                            AddressOne = "617 Cove Drive",
                            City = "Cedar City",
                            EmailAddress = "jbleaz@gmail.com",
                            FirstName = "Jeff",
                            LastName = "Bleazard",
                            MobileNumber = "435-531-1563",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 4,
                            AddressOne = "617 Cove Drive",
                            City = "Cedar City",
                            EmailAddress = "mbleaz@gmail.com",
                            FirstName = "Mauri",
                            LastName = "Bleazard",
                            MobileNumber = "435-531-1562",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 5,
                            AddressOne = "1340 Parkside Dr",
                            City = "Cedar City",
                            EmailAddress = "ddm@tristate.com",
                            FirstName = "David",
                            LastName = "Morris",
                            MobileNumber = "435-559-1996",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 6,
                            AddressOne = "2000 Corporate Drive",
                            AddressTwo = "Apt 1014",
                            City = "Mission Viejo",
                            EmailAddress = "tiffanyinmaui@gmail.com",
                            FirstName = "Tiffany",
                            LastName = "Morris",
                            MobileNumber = "949-322-8759",
                            State = "CA",
                            ZipCode = "92694"
                        },
                        new
                        {
                            Id = 7,
                            AddressOne = "123 Sales Drive",
                            AddressTwo = "ste 34",
                            City = "Cedar City",
                            EmailAddress = "sellerone@gmail.com",
                            FirstName = "Seller",
                            LastName = "One",
                            MobileNumber = "123-456-7890",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 8,
                            AddressOne = "123 Buying Drive",
                            City = "Cedar City",
                            EmailAddress = "buyerone@gmail.com",
                            FirstName = "Buyer",
                            LastName = "One",
                            MobileNumber = "098-765-4321",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 9,
                            AddressOne = "234 Sales Drive",
                            AddressTwo = "ste 34",
                            City = "Cedar City",
                            FirstName = "Seller",
                            LastName = "Two",
                            MobileNumber = "111-222-3333",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 10,
                            AddressOne = "234 Buying Drive",
                            City = "Cedar City",
                            FirstName = "Buyer",
                            LastName = "Two",
                            MobileNumber = "222-333-4444",
                            State = "UT",
                            ZipCode = "84720"
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.CustomerDeal", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsOurcustomer")
                        .HasColumnType("bit");

                    b.HasKey("CustomerId", "DealId");

                    b.HasIndex("DealId");

                    b.ToTable("CustomerDeals");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            DealId = 1,
                            CustomerType = 0,
                            Id = 1,
                            IsOurcustomer = true
                        },
                        new
                        {
                            CustomerId = 2,
                            DealId = 1,
                            CustomerType = 0,
                            Id = 2,
                            IsOurcustomer = true
                        },
                        new
                        {
                            CustomerId = 7,
                            DealId = 1,
                            CustomerType = 1,
                            Id = 3,
                            IsOurcustomer = false
                        },
                        new
                        {
                            CustomerId = 8,
                            DealId = 2,
                            CustomerType = 0,
                            Id = 4,
                            IsOurcustomer = false
                        },
                        new
                        {
                            CustomerId = 3,
                            DealId = 2,
                            CustomerType = 1,
                            Id = 5,
                            IsOurcustomer = true
                        },
                        new
                        {
                            CustomerId = 4,
                            DealId = 2,
                            CustomerType = 1,
                            Id = 6,
                            IsOurcustomer = true
                        },
                        new
                        {
                            CustomerId = 5,
                            DealId = 3,
                            CustomerType = 0,
                            Id = 7,
                            IsOurcustomer = true
                        },
                        new
                        {
                            CustomerId = 9,
                            DealId = 3,
                            CustomerType = 1,
                            Id = 8,
                            IsOurcustomer = false
                        },
                        new
                        {
                            CustomerId = 10,
                            DealId = 4,
                            CustomerType = 0,
                            Id = 9,
                            IsOurcustomer = true
                        },
                        new
                        {
                            CustomerId = 6,
                            DealId = 4,
                            CustomerType = 1,
                            Id = 10,
                            IsOurcustomer = true
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppraisalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AppraiserId")
                        .HasColumnType("int");

                    b.Property<int>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("DealAssigneeId")
                        .HasColumnType("int");

                    b.Property<int?>("DealCreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("DisclosureDeadline")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EarnestMoney")
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LenderID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TitleCompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppraiserId");

                    b.HasIndex("DealAssigneeId");

                    b.HasIndex("DealCreatorId");

                    b.HasIndex("LenderID");

                    b.HasIndex("PropertyId")
                        .IsUnique();

                    b.HasIndex("TitleCompanyId");

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppraisalDate = new DateTime(2020, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppraiserId = 1,
                            AssigneeId = 2,
                            ClosingDate = new DateTime(2020, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2020, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 1,
                            DisclosureDeadline = new DateTime(2020, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EarnestMoney = 1300m,
                            InspectionDate = new DateTime(2020, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LenderID = 1,
                            PropertyId = 1,
                            Status = 3,
                            TitleCompanyId = 2
                        },
                        new
                        {
                            Id = 2,
                            AppraisalDate = new DateTime(2020, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppraiserId = 2,
                            AssigneeId = 3,
                            ClosingDate = new DateTime(2020, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2020, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 2,
                            DisclosureDeadline = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EarnestMoney = 5000m,
                            InspectionDate = new DateTime(2020, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LenderID = 2,
                            PropertyId = 2,
                            Status = 3,
                            TitleCompanyId = 2
                        },
                        new
                        {
                            Id = 3,
                            AppraisalDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppraiserId = 2,
                            AssigneeId = 3,
                            ClosingDate = new DateTime(2020, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2020, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 4,
                            DisclosureDeadline = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EarnestMoney = 2000m,
                            InspectionDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LenderID = 2,
                            PropertyId = 3,
                            Status = 3,
                            TitleCompanyId = 1
                        },
                        new
                        {
                            Id = 4,
                            AppraisalDate = new DateTime(2020, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AppraiserId = 1,
                            AssigneeId = 1,
                            ClosingDate = new DateTime(2020, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2020, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = 4,
                            DisclosureDeadline = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EarnestMoney = 500m,
                            InspectionDate = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LenderID = 1,
                            PropertyId = 4,
                            Status = 3,
                            TitleCompanyId = 1
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.Lender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OfficeNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Lenders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressOne = "217 N. 300 West",
                            BusinessName = "MGM Mortgage",
                            City = "Cedar City",
                            EmailAddress = "TPrindle@afncorp.com",
                            MobileNumber = "435-531-6796",
                            Name = "Tim Prindle",
                            OfficeNumber = "435-531-6796",
                            State = "UT",
                            ZipCode = "84721"
                        },
                        new
                        {
                            Id = 2,
                            AddressOne = "98 W. Center St.",
                            BusinessName = "CityWide Home Loans",
                            City = "Cedar City",
                            EmailAddress = "karl@karlhugh.com",
                            MobileNumber = "435-590-1183",
                            Name = "Karl Hugh",
                            OfficeNumber = "435-590-1183",
                            State = "UT",
                            ZipCode = "84720"
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressOne = "2209 Cedar Hill Dr.",
                            City = "Cedar City",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 2,
                            AddressOne = "2216 Cedar Hill Dr.",
                            City = "Cedar City",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 3,
                            AddressOne = "2239 Cedar Hill Dr.",
                            City = "Cedar City",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 4,
                            AddressOne = "171 College Way",
                            AddressTwo = "#7",
                            City = "Cedar City",
                            State = "UT",
                            ZipCode = "84720"
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.TitleCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OfficeNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("TitleCompany");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressOne = "210 North 300 West",
                            AddressTwo = "Ste 100",
                            City = "Cedar City",
                            FaxNumber = "435-586-5141",
                            Name = "Southern Utah Title Company",
                            OfficeNumber = "435-586-9414",
                            State = "UT",
                            ZipCode = "84720"
                        },
                        new
                        {
                            Id = 2,
                            AddressOne = "365 S Main St",
                            City = "Cedar City",
                            Name = "First American Title Company",
                            OfficeNumber = "435-586-4476",
                            State = "UT",
                            ZipCode = "84720"
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "realtor1jen@gmail.com",
                            FirstName = "Jennifer",
                            LastName = "Davis",
                            UserGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserName = "jdavis"
                        },
                        new
                        {
                            Id = 2,
                            EmailAddress = "ky.s.dav@gmail.com",
                            FirstName = "Kyler",
                            LastName = "Davis",
                            UserGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserName = "kdavis"
                        },
                        new
                        {
                            Id = 3,
                            EmailAddress = "billyandjen@gmail.com",
                            FirstName = "Billy",
                            LastName = "Davis",
                            UserGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserName = "bdavis"
                        },
                        new
                        {
                            Id = 4,
                            EmailAddress = "pokey757@gmail.com",
                            FirstName = "Jessica",
                            LastName = "Davis",
                            UserGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserName = "jessdavis"
                        });
                });

            modelBuilder.Entity("DealTrackAPI.Entities.Comment", b =>
                {
                    b.HasOne("DealTrackAPI.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DealTrackAPI.Entities.Deal", "Deal")
                        .WithMany("Comments")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DealTrackAPI.Entities.CustomerDeal", b =>
                {
                    b.HasOne("DealTrackAPI.Entities.Customer", "Customer")
                        .WithMany("CustomersDeals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DealTrackAPI.Entities.Deal", "Deal")
                        .WithMany("CustomerDeals")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DealTrackAPI.Entities.Deal", b =>
                {
                    b.HasOne("DealTrackAPI.Entities.Appraiser", "DealAppraiser")
                        .WithMany()
                        .HasForeignKey("AppraiserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DealTrackAPI.Entities.User", "DealAssignee")
                        .WithMany()
                        .HasForeignKey("DealAssigneeId");

                    b.HasOne("DealTrackAPI.Entities.User", "DealCreator")
                        .WithMany()
                        .HasForeignKey("DealCreatorId");

                    b.HasOne("DealTrackAPI.Entities.Lender", "DealLender")
                        .WithMany()
                        .HasForeignKey("LenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DealTrackAPI.Entities.Property", "DealProperty")
                        .WithOne()
                        .HasForeignKey("DealTrackAPI.Entities.Deal", "PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DealTrackAPI.Entities.TitleCompany", "DealTitleCompany")
                        .WithMany()
                        .HasForeignKey("TitleCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
